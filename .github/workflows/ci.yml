name: ci

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches: [ '*' ]
    types: [ opened, synchronize, reopened, edited ]

permissions:
  contents: read
  pull-requests: write
  security-events: write

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ['1.23']
        include:
          - os: ubuntu-latest
            keyring-setup: |
              sudo apt-get update
              sudo apt-get install -y dbus-x11 gnome-keyring
              eval `dbus-launch --sh-syntax`
              echo "DBUS_SESSION_BUS_ADDRESS=$DBUS_SESSION_BUS_ADDRESS" >> $GITHUB_ENV
              echo -n "test" | gnome-keyring-daemon --unlock
              gnome-keyring-daemon --start --foreground --components=secrets &
    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          
      - name: Go Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set up keyring service
        run: |
          ${{ matrix.keyring-setup }}
        shell: bash
            
      - name: Install dependencies
        run: |
          go mod download
          go install gotest.tools/gotestsum@latest

      - name: Run tests
        run: |
          gotestsum --format github-actions --rerun-fails=3 --packages="./..."
        env:
          GODEBUG: x509sha1=1
          
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run gosec
        uses: securego/gosec@master
        with:
          args: ./...

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: WriteGoList
        run: go list -deps -json ./... > go.list

      - name: Run nancy
        uses: sonatype-nexus-community/nancy-github-action@main

  build:
    needs: [test, lint, security]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ['1.23']
        include:
          - os: ubuntu-latest
            artifact_name: bifrost-backup-linux-amd64
            GOOS: linux
            GOARCH: amd64
          - os: macos-latest
            artifact_name: bifrost-backup-darwin-amd64
            GOOS: darwin
            GOARCH: amd64
          - os: windows-latest
            artifact_name: bifrost-backup-windows-amd64.exe
            GOOS: windows
            GOARCH: amd64
    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          
      - name: Build
        run: |
          GOOS=${{ matrix.GOOS }} GOARCH=${{ matrix.GOARCH }} go build -v -o ${{ matrix.artifact_name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}
          retention-days: 5
